{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Hexo version: 3.2.0","time":"2016-06-02T03:13:20.775Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Working directory: D:\\GitHub\\Hexo\\","time":"2016-06-02T03:13:20.777Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Config loaded: D:\\GitHub\\Hexo\\_config.yml","time":"2016-06-02T03:13:20.936Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-deployer-git","time":"2016-06-02T03:13:20.958Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-deployer-openshift","time":"2016-06-02T03:13:20.961Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-deployer-heroku","time":"2016-06-02T03:13:20.964Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-deployer-rsync","time":"2016-06-02T03:13:21.022Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-archive","time":"2016-06-02T03:13:21.026Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-baidu-sitemap","time":"2016-06-02T03:13:21.031Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-category","time":"2016-06-02T03:13:21.033Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-feed","time":"2016-06-02T03:13:21.080Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-index","time":"2016-06-02T03:13:21.081Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-search","time":"2016-06-02T03:13:21.084Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-sitemap","time":"2016-06-02T03:13:21.086Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-generator-tag","time":"2016-06-02T03:13:21.088Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-html-minifier","time":"2016-06-02T03:13:21.095Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-renderer-ejs","time":"2016-06-02T03:13:21.096Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-renderer-marked","time":"2016-06-02T03:13:21.103Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-renderer-stylus","time":"2016-06-02T03:13:21.268Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Plugin loaded: hexo-server","time":"2016-06-02T03:13:21.326Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Script loaded: themes\\next\\scripts\\merge-configs.js","time":"2016-06-02T03:13:21.326Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Script loaded: themes\\next\\scripts\\tags\\group-pictures.js","time":"2016-06-02T03:13:21.327Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Script loaded: themes\\next\\scripts\\tags\\center-quote.js","time":"2016-06-02T03:13:21.328Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Script loaded: themes\\next\\scripts\\tags\\full-image.js","time":"2016-06-02T03:13:21.328Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Loading database.","time":"2016-06-02T03:13:21.329Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":30,"msg":"Start processing","time":"2016-06-02T03:13:21.337Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: 404.html","time":"2016-06-02T03:13:21.370Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: README.md","time":"2016-06-02T03:13:21.371Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: googlec93373d7ad2555cc.html","time":"2016-06-02T03:13:21.381Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/NodeJS安装完成.png","time":"2016-06-02T03:13:21.431Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/building-blocks.jpg","time":"2016-06-02T03:13:21.434Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/github目录.png","time":"2016-06-02T03:13:21.434Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/hexo安装目录.png","time":"2016-06-02T03:13:21.434Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/jacman主题安装目录.png","time":"2016-06-02T03:13:21.435Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/jooq-flyway.png","time":"2016-06-02T03:13:21.436Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/npm配置信息.png","time":"2016-06-02T03:13:21.436Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/photos在redis的数据结构示例.png","time":"2016-06-02T03:13:21.438Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/代码段.png","time":"2016-06-02T03:13:21.439Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/计算机软硬件配置.png","time":"2016-06-02T03:13:21.441Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/404.html","time":"2016-06-02T03:13:21.449Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: file/成亮_技术经理_简历.pdf","time":"2016-06-02T03:13:21.450Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/MircoService.png","time":"2016-06-02T03:13:21.467Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/thinking.jpg","time":"2016-06-02T03:13:21.467Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Theme config loaded.","time":"2016-06-02T03:13:21.480Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _config.yml","time":"2016-06-02T03:13:21.480Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/css/main.styl","time":"2016-06-02T03:13:21.484Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/avatar.png","time":"2016-06-02T03:13:21.485Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/avatar.gif","time":"2016-06-02T03:13:21.487Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/background-backup.jpg","time":"2016-06-02T03:13:21.488Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-by-nc-nd.svg","time":"2016-06-02T03:13:21.488Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-by-nc-sa.svg","time":"2016-06-02T03:13:21.488Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-by-nc.svg","time":"2016-06-02T03:13:21.489Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-by-sa.svg","time":"2016-06-02T03:13:21.489Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-by.svg","time":"2016-06-02T03:13:21.489Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-by-nd.svg","time":"2016-06-02T03:13:21.490Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/cc-zero.svg","time":"2016-06-02T03:13:21.490Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/favicon.ico","time":"2016-06-02T03:13:21.490Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/loading.gif","time":"2016-06-02T03:13:21.490Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/placeholder.gif","time":"2016-06-02T03:13:21.490Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/quote-l.svg","time":"2016-06-02T03:13:21.491Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/quote-r.svg","time":"2016-06-02T03:13:21.491Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/searchicon.png","time":"2016-06-02T03:13:21.492Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: about/index.md","time":"2016-06-02T03:13:21.532Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/03-消息系统改进1阶段的总体结构.jpg","time":"2016-06-02T03:13:21.536Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/rewards/wechat-reward-image.png","time":"2016-06-02T03:13:21.560Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: file/Nginx_从入门到提高.ppt","time":"2016-06-02T03:13:21.563Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/A-new-start.md","time":"2016-06-02T03:13:21.565Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Message-system-architecture-evolution.md","time":"2016-06-02T03:13:21.566Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/JOOQ-from-entry-to-improve.md","time":"2016-06-02T03:13:21.573Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Nginx-with-docker-part-one.md","time":"2016-06-02T03:13:21.577Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Remember-a-reverse-proxy-configuration-process-for-nginx-and-Tomcat-in-the-docker-environment.md","time":"2016-06-02T03:13:21.582Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Nginx-with-docker-part-two.md","time":"2016-06-02T03:13:21.588Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/SQL-improve-elegant-use-join-query.md","time":"2016-06-02T03:13:21.589Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Software-refactoring-experience-summary.md","time":"2016-06-02T03:13:21.591Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Summary-of-distributed-theory.md","time":"2016-06-02T03:13:21.591Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/Technical-architecture-specification-summary.md","time":"2016-06-02T03:13:21.593Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/What-is-a-transaction.md","time":"2016-06-02T03:13:21.598Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: _posts/A-successful-redis-tuning-record.md","time":"2016-06-02T03:13:21.599Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_layout.swig","time":"2016-06-02T03:13:21.739Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/archive.swig","time":"2016-06-02T03:13:21.740Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/page.swig","time":"2016-06-02T03:13:21.740Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/index.swig","time":"2016-06-02T03:13:21.740Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/category.swig","time":"2016-06-02T03:13:21.740Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/post.swig","time":"2016-06-02T03:13:21.740Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/tag.swig","time":"2016-06-02T03:13:21.740Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: categories/index.md","time":"2016-06-02T03:13:21.747Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/de.yml","time":"2016-06-02T03:13:21.747Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/en.yml","time":"2016-06-02T03:13:21.747Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/fr-FR.yml","time":"2016-06-02T03:13:21.747Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/default.yml","time":"2016-06-02T03:13:21.747Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/id.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/ja.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/pt.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/zh-Hans.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/ru.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/zh-tw.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: languages/zh-hk.yml","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: index/index.md","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: tags/index.md","time":"2016-06-02T03:13:21.748Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/affix.js","time":"2016-06-02T03:13:21.752Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/bootstrap.js","time":"2016-06-02T03:13:21.752Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/hook-duoshuo.js","time":"2016-06-02T03:13:21.753Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/motion.js","time":"2016-06-02T03:13:21.753Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/post-details.js","time":"2016-06-02T03:13:21.753Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/scrollspy.js","time":"2016-06-02T03:13:21.753Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/utils.js","time":"2016-06-02T03:13:21.753Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fastclick/LICENSE","time":"2016-06-02T03:13:21.755Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fastclick/README.md","time":"2016-06-02T03:13:21.755Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fastclick/bower.json","time":"2016-06-02T03:13:21.755Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/HELP-US-OUT.txt","time":"2016-06-02T03:13:21.756Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/bower.json","time":"2016-06-02T03:13:21.756Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/jquery_lazyload/CONTRIBUTING.md","time":"2016-06-02T03:13:21.757Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/jquery_lazyload/README.md","time":"2016-06-02T03:13:21.757Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/jquery_lazyload/bower.json","time":"2016-06-02T03:13:21.757Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/jquery_lazyload/jquery.lazyload.js","time":"2016-06-02T03:13:21.758Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/jquery_lazyload/jquery.scrollstop.js","time":"2016-06-02T03:13:21.758Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/velocity/bower.json","time":"2016-06-02T03:13:21.758Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/velocity/velocity.min.js","time":"2016-06-02T03:13:21.759Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/velocity/velocity.ui.js","time":"2016-06-02T03:13:21.759Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/velocity/velocity.ui.min.js","time":"2016-06-02T03:13:21.759Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: img/chaos.jpg","time":"2016-06-02T03:13:21.770Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/jquery/index.js","time":"2016-06-02T03:13:21.770Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_macro/reward.swig","time":"2016-06-02T03:13:21.806Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_macro/sidebar.swig","time":"2016-06-02T03:13:21.806Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_macro/post.swig","time":"2016-06-02T03:13:21.806Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_macro/wechat-subscriber.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_macro/post-collapse.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/comments.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/duoshuo-hot-articles.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/head.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/footer.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/header.swig","time":"2016-06-02T03:13:21.807Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/pagination.swig","time":"2016-06-02T03:13:21.808Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/search.swig","time":"2016-06-02T03:13:21.808Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/baidu-push.swig","time":"2016-06-02T03:13:21.808Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/commons.swig","time":"2016-06-02T03:13:21.808Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/boostrap.swig","time":"2016-06-02T03:13:21.808Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/vendors.swig","time":"2016-06-02T03:13:21.808Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/images/background.jpg","time":"2016-06-02T03:13:21.812Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/js/src/schemes/pisces.js","time":"2016-06-02T03:13:21.813Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/blank.gif","time":"2016-06-02T03:13:21.813Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/fancybox_loading.gif","time":"2016-06-02T03:13:21.813Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/fancybox_loading@2x.gif","time":"2016-06-02T03:13:21.814Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/fancybox_overlay.png","time":"2016-06-02T03:13:21.814Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/fancybox_sprite.png","time":"2016-06-02T03:13:21.814Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/fancybox_sprite@2x.png","time":"2016-06-02T03:13:21.815Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/jquery.fancybox.css","time":"2016-06-02T03:13:21.815Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/jquery.fancybox.js","time":"2016-06-02T03:13:21.815Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/jquery.fancybox.pack.js","time":"2016-06-02T03:13:21.815Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fastclick/lib/fastclick.js","time":"2016-06-02T03:13:21.816Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fastclick/lib/fastclick.min.js","time":"2016-06-02T03:13:21.816Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/css/font-awesome.css","time":"2016-06-02T03:13:21.816Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/css/font-awesome.css.map","time":"2016-06-02T03:13:21.816Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/css/font-awesome.min.css","time":"2016-06-02T03:13:21.816Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","time":"2016-06-02T03:13:21.816Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/ua-parser-js/dist/ua-parser.min.js","time":"2016-06-02T03:13:21.817Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/ua-parser-js/dist/ua-parser.pack.js","time":"2016-06-02T03:13:21.817Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/schemes/mist.swig","time":"2016-06-02T03:13:21.826Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/schemes/muse.swig","time":"2016-06-02T03:13:21.826Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/fonts/FontAwesome.otf","time":"2016-06-02T03:13:21.827Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/fonts/fontawesome-webfont.eot","time":"2016-06-02T03:13:21.827Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/fonts/fontawesome-webfont.woff","time":"2016-06-02T03:13:21.827Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/velocity/velocity.js","time":"2016-06-02T03:13:21.827Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/search/tinysou.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/share/add-this.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/search/localsearch.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/search/swiftype.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/share/baidushare.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/share/duoshuo_share.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/pages/post-details.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/share/jiathis.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/schemes/pisces.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/localsearch.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/mathjax.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/tinysou.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/lean-analytics.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/comments.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_partials/head/external-fonts.swig","time":"2016-06-02T03:13:21.839Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/helpers/fancybox_buttons.png","time":"2016-06-02T03:13:21.843Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","time":"2016-06-02T03:13:21.843Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","time":"2016-06-02T03:13:21.843Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","time":"2016-06-02T03:13:21.843Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","time":"2016-06-02T03:13:21.844Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","time":"2016-06-02T03:13:21.844Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","time":"2016-06-02T03:13:21.844Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics/busuanzi-counter.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics/baidu-analytics.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics/tencent-analytics.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics/cnzz-analytics.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics/facebook-sdk.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/comments/disqus.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/analytics/google-analytics.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: layout/_scripts/third-party/comments/duoshuo.swig","time":"2016-06-02T03:13:21.850Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Processed: source/vendors/font-awesome/fonts/fontawesome-webfont.svg","time":"2016-06-02T03:13:21.851Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":60,"err":"Parse Error: <Integer,String> getBatchFileInRedis(int[] ids)”，甚至在cache interface中都没有提供这样的接口定义。</p>\n<p>这样导致在上层逻辑中，出现大量一次性代码。因为调用不集中，给重构带来很大麻烦。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是分页获取商品列表的伪代码实现</span><br><span class=\"line\"></span><br><span class=\"line\">与数据库product表对应的实体类</span><br><span class=\"line\">public class Product&#123;</span><br><span class=\"line\">    private int id;</span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    private long price;</span><br><span class=\"line\">    private int photoId;</span><br><span class=\"line\"></span><br><span class=\"line\">    //忽略 getter\\setter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">真实的返回到app端的对象</span><br><span class=\"line\">public class ProductFull&#123;</span><br><span class=\"line\">    private int id;</span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    private long price;</span><br><span class=\"line\">    private int photoId;</span><br><span class=\"line\">    private String photoUrl;</span><br><span class=\"line\"></span><br><span class=\"line\">    //忽略 getter\\setter</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public List&lt;ProductFull&gt; findProductByPage(int pageSize,int pageNo)&#123;</span><br><span class=\"line\">    List&lt;Product&gt; products=this.productDao.findByPage(int pageSize,int pageNo);//调用Dao层访问Mysql</span><br><span class=\"line\">    List&lt;ProductFull&gt; results=new ArrayList&lt;&gt;(products.size());</span><br><span class=\"line\">    for(Product product:products)&#123;</span><br><span class=\"line\">        ProductFull pf=new ProductFull();</span><br><span class=\"line\">        pf.setId(product.getId());//其他的属性值都是类似的拷贝，或借助Apache-Common beanUtils组件进行拷贝。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        String url=this.cacheDao.getOneFileInRedis(product.getPhotoId());//每一个循环项都访问了redis</span><br><span class=\"line\">        pf.setPhotoUrl(url);</span><br><span class=\"line\">        results.add(pf);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return results;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">如果每个商品分页是10条，最坏情况下，需要访问1次Mysql+访问10次redis。非常严重的是，每个分页条数的大小由app端决定，服务端不限制，WTF?</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"缓存登录后的用户信息\"><a href=\"#缓存登录后的用户信息\" class=\"headerlink\" title=\"缓存登录后的用户信息\"></a>缓存登录后的用户信息</h3><p>在这个产品面向消费者以及商家，都推出了不同的APP。互联网APP为了提高用户体验，以及降低用户登录登出频次(用户的登录/登出操作，对服务器是比较大的开销)，都会对一次登陆成功的用户，默认在一段时间不需要再次登录。即服务器分配Token给APP本地保存，同时服务器保存Token，设置该Token在一段时间不活动后自动失效，APP后续与服务器的通信中，都需要提交该Token鉴权。这是很常规的做法，短时间有效，而且是非关键性小数据，一次写入多次读取，对于服务器来说，没有比memcached或redis更合适的选择了，那为什么没有选择memcached？我个人的猜测是memcached更适合做Object Store Server，而且很重要的redis具有丰富数据结构与<a href=\"http://www.cnblogs.com/EE-NovRain/p/3268476.html\">扩容与容灾机制</a>。</p>\n<p>用户的第一次登录，服务端进行参数解析，鉴权后，就需要写入2次redis。<br>用户的登出接口中，直接是删除当前会话的redis记录。</p>\n<p>第一次：写入本次登入的Token与用户信息的关联<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录成功后，从DB或Cache层获取用户数据，构造用户数据JSON</span><br><span class=\"line\">String userLoginSuccessInfo=&quot;&#123;&quot;uid&quot;:12321,&quot;name&quot;:&quot;张三&quot;,&quot;sex&quot;:0,&quot;avatar_id&quot;:345643&#125;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">cacheDao的实现</span><br><span class=\"line\">private final static String SESSION_CACHE_KEY=&quot;session:&quot;;</span><br><span class=\"line\">//登录成功</span><br><span class=\"line\">public void setOneLoginSuccessToRedis(String token,String userLoginSuccessInfo)&#123;</span><br><span class=\"line\">    this.jedis.setex(SESSION_CACHE_KEY+token, 30*24*60*60, userLoginSuccessInfo);//1.使用String数据结构。2.设置key有效期30天。</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//鉴权</span><br><span class=\"line\">public String getOneLoginSuccessInRedis(String token)&#123;</span><br><span class=\"line\">    return this.jedis.get(SESSION_CACHE_KEY+token);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//登出</span><br><span class=\"line\">public void logoutSuccessInRedis(String token)&#123;</span><br><span class=\"line\">    this.jedis.del(SESSION_CACHE_KEY+token);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">这个以&quot;session:&quot;开头的key里，并没有实现从uid如何获取token值？</span><br><span class=\"line\">这会引发的问题：一个用户的多次登录，会生成多个以&quot;session:&quot;开头的key，没有覆盖之前登录的token。造成内存空间的浪费，以及不安全。正确的做法在下文会提到。</span><br></pre></td></tr></table></figure></p>\n<p>第二次：写入本次登入的用户id与24小时内的积分获取信息。</p>\n<p>有一个需求定义用户在登录后可以获取积分，但在24小时内的登录只算一次。</p>\n<p>那在服务器端的是实现是，用户第一次登录成功后，在redis写入一个与该用户相关的key，并设置24小时后失效，然后再增加积分。用户在24小时内进行第二次登录，先读取redis是否有相关的key，使用exist命令，如果已经有了，就不增加积分了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录成功后，从DB或Cache层获取用户数据，构造用户与积分业务数据JSON</span><br><span class=\"line\">int uid=158263;</span><br><span class=\"line\"></span><br><span class=\"line\">cacheDao的实现</span><br><span class=\"line\">private final static String USER_ACTIVITY_CACHE_KEY=&quot;daily_activity_&quot;;</span><br><span class=\"line\">public void setOneUserWithActivityToRedis(int uid)&#123;</span><br><span class=\"line\">    this.jedis.setex(USER_ACTIVITY_CACHE_KEY+uid, 24*60*60, &quot;&quot;);//1.使用String数据结构。2.设置key有效期24h。3.value部分为空字符串？</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public boolean checkOneUserWithActivityToRedis(int uid)&#123;</span><br><span class=\"line\">    this.jedis.exists(USER_ACTIVITY_CACHE_KEY+uid);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这部分的业务属于典型案例，浪费内存空间。<br>第一个问题，不应该使用长前缀，每个key都需要set进内存，长前缀意味着空间占用，以及效率低下。<br>第二个问题，这不是明显可以使用<a href=\"https://redis.readthedocs.org/en/2.4/sorted_set.html\">Sorted Set数据结构</a>?，还可以省掉一次exists检查。</p>\n<p>虽然redis的TPS很高，但是我们依旧要避免滥用。</p>\n<h2 id=\"这次的问题的描述？\"><a href=\"#这次的问题的描述？\" class=\"headerlink\" title=\"这次的问题的描述？\"></a>这次的问题的描述？</h2><p>测试MM提出在性能测试环境中，有一些API在并发数到250~300时，出现很多报错。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis的相关错误</span><br><span class=\"line\">Could not get a resource from the pool</span><br></pre></td></tr></table></figure></p>\n<p>典型报错的接口有</p>\n<ul>\n<li>分页获取商品列表</li>\n<li>用户登录</li>\n</ul>\n<p>应用中配置redis连接池上限值是1000，而在redis server端配置maxClients=10000;区区这点并发，就耗尽redis连接池资源了？绝不可能，问题还在更远的地方等着我.</p>\n<p>性能测试环境配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">硬件配置</span><br><span class=\"line\">操作系统    Linux Ubuntu 14.04.4 LTS</span><br><span class=\"line\">CPU个数   4</span><br><span class=\"line\">CPU时钟频率 2.6G</span><br><span class=\"line\">内存  4G</span><br><span class=\"line\">有无外部存储  云端存储</span><br><span class=\"line\"></span><br><span class=\"line\">软件配置</span><br><span class=\"line\">docker  1.9.1</span><br><span class=\"line\">mysql   5.6</span><br><span class=\"line\">jdk 1.8.0_72</span><br><span class=\"line\">solr    5.3.0</span><br><span class=\"line\">redis   3.0.5</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"如何一步步的解决问题？\"><a href=\"#如何一步步的解决问题？\" class=\"headerlink\" title=\"如何一步步的解决问题？\"></a>如何一步步的解决问题？</h2><p>在描述问题产生背景时，其实也提到了很多不合理的地方，但<em>存在即合理</em>，处在现在的困境，一定有当时的无奈。现在我们一起来总结一下问题所在。</p>\n<h3 id=\"对缓存图片的处理存在的问题\"><a href=\"#对缓存图片的处理存在的问题\" class=\"headerlink\" title=\"对缓存图片的处理存在的问题\"></a>对缓存图片的处理存在的问题</h3><ul>\n<li>产品初始化时全量塞入redis/产品停止运行是全量卸掉</li>\n<li>产品初始化时塞入redis时，没有做批量操作</li>\n<li>对批量获取图片信息不支持，在接口层面就已经没有定义，对于可预见的需求没有进行考虑，这是架构设计的缺陷。</li>\n<li>引申：大量的数据，放在一个key里，会出现问题，需要进行水平切分(Sharding)。</li>\n</ul>\n<h4 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h4><p>1.图片的Id数据在File表采用了<em>自增长</em>的方式生成，不会出现重复，并且有顺序。我们可以利用这一点，在产品初始化时，在Mysql数据库File表只查找2个字段：id/url。程序处理时，先写入reids一个key，使用Hash数据结构，isInitIng:photos-true，标明到正在初始化，其他产品节点不需要重复初始化。使用hmset的方式，一次性将多个键值对存入到redis。完成后，修改isInitIng:photos-false。当有了新图片时，先在Mysql数据库File表进行保存，得到这个图片的Id以及url，使用hset加入该图片到redis。如果需要修改某一张图片的url，也可以用hset。这样在产品停止运行时，是不需要删除redis关于图片的数据的。</p>\n<p>2.cache层加入新接口，支持批量获取图片信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private final static String PHOTO_CACHE_KEY=&quot;photos&quot;;</span><br><span class=\"line\">public void setFileToRedis(Map&lt;Integer,String&gt; photos)&#123;</span><br><span class=\"line\">    this.jedis.hmset(PHOTO_CACHE_KEY, photos);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public Map&lt;Integer,String&gt; getBatchFileInRedis(int[] ids)&#123;</span><br><span class=\"line\">    return this.jedis.hmget(PHOTO_CACHE_KEY, coverArrayToString(ids));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private static String[] coverArrayToString(int[] ids)&#123;</span><br><span class=\"line\">    String[] results=new String[ids.length];</span><br><span class=\"line\">    for (int i = 0; i &lt; ids.length; i++) &#123;</span><br><span class=\"line\">        results[i]=ids[i]+&quot;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return results;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>对之前循环调用的上层代码进行修改，改为调用批量获取接口。</p>\n<p>3.对于单个key承载大量的数据的情况，方案是对key下的values hash key进行分割，使用一定的算法将块状的数据均匀分布在多个key里。给一个<a href=\"http://blog.nosqlfan.com/html/3379.html\">参考链接</a>。</p>\n<h3 id=\"对缓存用户登录的处理存在的问题\"><a href=\"#对缓存用户登录的处理存在的问题\" class=\"headerlink\" title=\"对缓存用户登录的处理存在的问题\"></a>对缓存用户登录的处理存在的问题</h3><ul>\n<li>session的存储不合理，每次登陆都会生成一个新的key值</li>\n<li>对USER_ACTIVITY_CACHE_KEY在value部分的数据结构不合理，应采用Sorted Set</li>\n<li>对USER_ACTIVITY_CACHE_KEY的命名不合适，过长导致空间浪费和效率低下</li>\n<li>因采用错误数据结构，USER_ACTIVITY_CACHE_KEY需要进行多一次的exists判断。</li>\n</ul>\n<h4 id=\"方案-1\"><a href=\"#方案-1\" class=\"headerlink\" title=\"方案\"></a>方案</h4><p>session的存储不合理的解决，通过新的key(uid:token)来反向标记uid与token的关系，2个key的超时时间保持一致，例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uid:158742-token001</span><br></pre></td></tr></table></figure></p>\n<p>在写入SESSION_CACHE_KEY时，同时写入到redis，为保证2次写入的原子性，需要使用<a href=\"https://redis.readthedocs.org/en/2.4/transaction.html\">redis的事务</a>。如果支持用户的多设备在线，只需要将key(uid:token)更改为Sorted Set结构。因为不存在资源的争夺，这个事务几乎不会失败。在用户登出时，删除掉当前会话信息以及用户关联的会话信息(同样是使用redis事务)。</p>\n<p>注意，单机redis环境下，事务命令被完整的支持。扩展到多机redis协同工作时，如果使用了twemproxy，则事务命令不受支持，无法应用该方案。<a href=\"https://github.com/twitter/twemproxy/blob/master/notes/redis.md\">查看twemproxy对redis命令的支持情况</a>。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cacheDao的实现</span><br><span class=\"line\">private final static String SESSION_CACHE_KEY=&quot;se:&quot;;//全称：&quot;session:&quot;，改善key命名，按业务进行简略，提升网络传输和存储效率。</span><br><span class=\"line\">private final static String USER_TOKEN_CACHE_KEY=&quot;u:t:&quot;;//uid:token:</span><br><span class=\"line\">//登录成功，保存用户登录Token。接收建议的token参数值，返回实际保存的token值。</span><br><span class=\"line\">public String setOneLoginSuccessToRedis(int uid,String token,String userLoginSuccessInfo)&#123;//重构</span><br><span class=\"line\">    if(checkOneUserTokenExists(uid))&#123;</span><br><span class=\"line\">        token=getOneUserToken(uid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    long expireTime=30*24*60*60;//设置key有效期30天。</span><br><span class=\"line\">    String ret=this.jedis.watch(SESSION_CACHE_KEY+token,USER_TOKEN_CACHE_KEY+uid);//乐观锁，重试，在这里几乎不存在</span><br><span class=\"line\">    if(ret==null||!ret.equals(&quot;OK&quot;))&#123;</span><br><span class=\"line\">        log.error(&quot;redis watch 操作失败.ret:&#123;&#125;&quot;,ret);</span><br><span class=\"line\">        this.jedis.unwatch();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Transaction tx = this.jedis.multi();</span><br><span class=\"line\">    tx.setex(SESSION_CACHE_KEY+token, expireTime, userLoginSuccessInfo);</span><br><span class=\"line\">    tx.setex(USER_TOKEN_CACHE_KEY+uid, expireTime, token);</span><br><span class=\"line\">    List&lt;Object&gt; results = tx.exec();</span><br><span class=\"line\">    return token;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//检查用户登录Token是否已经存在</span><br><span class=\"line\">public boolean checkOneUserTokenExists(int uid)&#123;//新方法</span><br><span class=\"line\">    return this.jedis.exists(USER_TOKEN_CACHE_KEY+uid);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//获取用户登录Token信息</span><br><span class=\"line\">public String getOneUserToken(int uid)&#123;//新方法</span><br><span class=\"line\">    return this.jedis.get(USER_TOKEN_CACHE_KEY+uid);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//鉴权</span><br><span class=\"line\">public String getOneLoginSuccessInRedis(String token)&#123;//不改动</span><br><span class=\"line\">    return this.jedis.get(SESSION_CACHE_KEY+token);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//登出</span><br><span class=\"line\">public void logoutSuccessInRedis(String token)&#123;</span><br><span class=\"line\">    String ret=this.jedis.watch(SESSION_CACHE_KEY+token,USER_TOKEN_CACHE_KEY+uid);//乐观锁，重试，在这里几乎不存在</span><br><span class=\"line\">    if(ret==null||!ret.equals(&quot;OK&quot;))&#123;</span><br><span class=\"line\">        log.error(&quot;redis watch 操作失败.ret:&#123;&#125;&quot;,ret);</span><br><span class=\"line\">        this.jedis.unwatch();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Transaction tx = this.jedis.multi();</span><br><span class=\"line\">    tx.del(SESSION_CACHE_KEY+token);</span><br><span class=\"line\">    tx.del(USER_TOKEN_CACHE_KEY+uid);</span><br><span class=\"line\">    List&lt;Object&gt; results = tx.exec();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"隐患和思考\"><a href=\"#隐患和思考\" class=\"headerlink\" title=\"隐患和思考\"></a>隐患和思考</h4><p>redis事务带来的问题，redis的事务设计比较暴力，这给应用层带来了麻烦。</p>\n<ul>\n<li>Redis的基本事务（basic transaction）需要用到MULTI命令和EXEC命令，这种事务可以让一个客户端在不被其他客户端打断的情况下执行多个命令。和关系数据库那种可以在执行的过程中进行回滚（rollback）的事务不同，在Redis里面，被MULTI命令和EXEC命令包围的所有命令会一个接一个地执行，直到所有命令都执行完毕为止。当一个事务执行完毕之后，Redis才会处理其他客户端的命令。</li>\n<li><a href=\"http://redisdoc.com/topic/transaction.html\">Redis 在事务失败时不进行回滚，而是继续执行余下的命令</a></li>\n</ul>\n<p>基于此，redis事务会在客户端高并发时，其他客户端命令产生阻塞，而且事务回滚需要应用层自己解决。关于事务无法自动回滚，这在NoSQL领域是常见问题了。</p>\n<h4 id=\"redis时间线设计\"><a href=\"#redis时间线设计\" class=\"headerlink\" title=\"redis时间线设计\"></a>redis时间线设计</h4><p>接下来对用户在24小时内的积分信息的处理进行改进，以及redis不支持对Set内的单个Element进行有效期设置，我们采用Sorted Set结构，结合Score特性和Quartz来达到元素过期被删除的目的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cacheDao的实现</span><br><span class=\"line\">private final static String USER_ACTIVITY_CACHE_KEY=&quot;a:d&quot;;//全称：&quot;activity:daily:&quot;，改善key命名，按业务进行简略，提升网络传输和存储效率。</span><br><span class=\"line\">public void setOneUserWithActivityToRedis(int uid)&#123;</span><br><span class=\"line\">    this.jedis.zadd(USER_ACTIVITY_CACHE_KEY,System.currentTimeMillis(),uid+&quot;&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public boolean checkOneUserWithActivityToRedis(int uid)&#123;</span><br><span class=\"line\">    this.jedis.sismember(USER_ACTIVITY_CACHE_KEY,uid+&quot;&quot;);</span><br><span class=\"line\">    long score=this.jedis.zscore(USER_ACTIVITY_CACHE_KEY,uid+&quot;&quot;);</span><br><span class=\"line\">    if(score&gt;0)&#123;</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">另外加入一个计划任务，借助Quartz即可。</span><br><span class=\"line\">String corn=*/1 * * * * ?  //每1秒钟执行1次</span><br><span class=\"line\">public void cleanExpireUserWithActivity()&#123;</span><br><span class=\"line\">    long now=System.currentTimeMillis();</span><br><span class=\"line\">    long 1MAgo=now-60*1000;//1分钟前的时间</span><br><span class=\"line\">    long remCount=this.jedis.zremrangeByScore(USER_ACTIVITY_CACHE_KEY,1MAgo,now);</span><br><span class=\"line\">    log.info(&quot;成功删除的元素数量是：&#123;&#125;，执行时间是：&#123;&#125;&quot;,remCount,now);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"隐患和思考-1\"><a href=\"#隐患和思考-1\" class=\"headerlink\" title=\"隐患和思考\"></a>隐患和思考</h4><p>在上文给出的代码中，我们做了一定的容错性，每次删除过去1分钟的所有Element，这样Quartz出现故障时，如果在1分钟内得到fixed，影响的数据只限于1分钟内的Element。每1秒钟触发一次Quartz与删除过去1分钟的所有Element，这2个维度的频率需要权衡。</p>\n<ul>\n<li>过高频率的访问redis是否会有稳定性问题？</li>\n<li>删除Element的时间区间过大，是否会影响redis执行效率(时间复杂度:<a href=\"http://redisdoc.com/sorted_set/zrevrangebyscore.html\">O(log(N)+M)</a>)，导致阻塞？</li>\n<li>高频率删除Element，是否会影响redis的RDB与AOF备份，因此造成额外的问题？</li>\n</ul>\n<p>借助Quartz还有misfire的隐患，如何保障Quartz在每一秒钟都顺畅执行一次(Once and only once)，这涉及到操作系统、内存的可靠性，这是一个大的命题，我们不过多讨论。</p>\n<p>记录一下对这类问题的思考</p>\n<ul>\n<li>可以对这个计划任务进行多机并行运行。例如：A计划与B计划都处于运行状态，A在奇数秒触发，B在偶数秒触发。进一步降低2秒内misfire的概率。</li>\n<li>在Quartz启动Job时，检测到是业务高峰期，另开启一个异步线程，调用cleanExpireUserWithActivity方法，而cleanExpireUserWithActivity需要承受并发，即redis需要对zremrangeByScore命令支持并发，但redis是<a href=\"http://www.blogjava.net/caojianhua/archive/2013/01/28/394847.html\">单进程单线程模型</a>。</li>\n<li>异步线程受制于redis，还可以进行改进，使用队列，如ActiveMQ。调用cleanExpireUserWithActivity逻辑进行调整，将命令序列化后写入到点对点队列，另外使用程序监听队列(即消费者端)，有新命令时取出，这里实际调用cleanExpireUserWithActivity，仅在调用成功后释放命令。</li>\n<li>现在问题在于如何保障ActiveMQ的稳定运行了，应该还有改进方案。</li>\n</ul>\n<p>按照以上的方案进行重构后，性能得到显著提升，按理论来说稳定性会有提高，因为不具备稳定性测试的条件，没法比较。</p>\n<h2 id=\"遇到了一些问题\"><a href=\"#遇到了一些问题\" class=\"headerlink\" title=\"遇到了一些问题\"></a>遇到了一些问题</h2><p>1.redis一次批量hmset过多时报错<br>hmset操作时，对于一次传入参数数量上限有要求。这取决于你的网络环境下，socket一次写入的字节数上限。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public String hmset(final String key, final Map&lt;String, String&gt; hash);</span><br></pre></td></tr></table></figure></p>\n<p>在我本机的环境下(应用与redis都在本机，不同端口，redis以默认配置运行)，Map<String, String> hash的size大于5w左右就会报错。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis.clients.jedis.exceptions.JedisConnectionException: java.net.SocketException: Software caused connection abort: socket write error</span><br><span class=\"line\">    at redis.clients.jedis.Protocol.sendCommand(Protocol.java:98)</span><br><span class=\"line\">    at redis.clients.jedis.Protocol.sendCommand(Protocol.java:78)</span><br><span class=\"line\">    at redis.clients.jedis.Connection.sendCommand(Connection.java:101)</span><br><span class=\"line\">    at redis.clients.jedis.BinaryClient.hmset(BinaryClient.java:246)</span><br><span class=\"line\">    at redis.clients.jedis.Client.hmset(Client.java:171)</span><br><span class=\"line\">    at redis.clients.jedis.Jedis.hmset(Jedis.java:652)</span><br></pre></td></tr></table></figure></p>\n<p>在这种情况下，必需要将大Map切分成一块块的Map，循环调用hmset<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">final static int maxEveryTurn=5000;//定义每次最多批量塞入redis的key数量</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 批量存储到redis的key数量太多，必需切分成小块存储</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static void setTooManyToJedis(Jedis jedis, Map&lt;String, String&gt; map) &#123;</span><br><span class=\"line\">        int size=map.size();</span><br><span class=\"line\">        int pieceNum=size/maxEveryTurn;</span><br><span class=\"line\">        if(size&gt;(pieceNum*maxEveryTurn))&#123;</span><br><span class=\"line\">            pieceNum+=1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class=\"line\">        List&lt;Map&lt;String, String&gt;&gt; list=new ArrayList&lt;&gt;(pieceNum);</span><br><span class=\"line\">        for (int i=0;i&lt;pieceNum;i++)&#123;</span><br><span class=\"line\">            list.add(new HashMap&lt;&gt;(maxEveryTurn));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        while (iterator.hasNext()) &#123;</span><br><span class=\"line\">            Map.Entry&lt;String, String&gt; entry = iterator.next();</span><br><span class=\"line\">            String key = entry.getKey();</span><br><span class=\"line\">            int hashCode = Math.abs(String.valueOf(key).hashCode());</span><br><span class=\"line\">            int index=hashCode % pieceNum;</span><br><span class=\"line\">            list.get(index).put(key, map.get(key));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        map.clear();</span><br><span class=\"line\">        for (Map&lt;String, String&gt; pieceMap:list)&#123;</span><br><span class=\"line\">            setToJedis(jedis, pieceMap);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        list.clear();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.持续写redis时遇到rdb问题<br>在完成以上方案的改进后，测试人员的用户登录这个接口在进行性能回归测试时，使用gatling配置250个工作线程进行并发，一共完成50w的用户登录后就算是结束，再根据生成的测试报告分析。<br>刚开始每次压到20多w的用户登录时，就会报错，redis连接池无连接了。分析代码是配置了testOnBorrow:true，这个配置会在获取到连接后检查该连接的有效性，如果无效就丢弃，即在连接池删掉一个连接。而此时redis因为问题无法执行用户端的任何命令，所以所有连接都被当做无效连接被丢弃？直到连接池空了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在redis命令行执行</span><br><span class=\"line\">set test 12321</span><br><span class=\"line\">返回错误：</span><br><span class=\"line\">(error) MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.</span><br></pre></td></tr></table></figure></p>\n<p>这是因为默认的redis配置是以<a href=\"http://shanks.leanote.com/post/Untitled-55ca439338f41148cd000759-22\">RDB的方式</a>进行定期存盘，而存盘时，会拒绝所有外部命令的写入(存盘失败后也会拒绝写入)。因为目前在redis的数据都处于可丢，解决方式也相当的粗暴。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.保证redis处于运行状态，查询系统6379端口的监听情况</span><br><span class=\"line\">2.顺序执行以下命令行，遇到错误请终止</span><br><span class=\"line\">docker exec -it test_redis_1 /bin/bash</span><br><span class=\"line\">cd usr/local/bin</span><br><span class=\"line\">./redis-cli.sh</span><br><span class=\"line\">config set stop-writes-on-bgsave-error no</span><br><span class=\"line\">config set save &quot;&quot;</span><br><span class=\"line\">quit</span><br><span class=\"line\">exit</span><br></pre></td></tr></table></figure></p>\n<p>执行完以后，重启应用，再压测，呵呵，bug关闭。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>1.在最后一步提到RDB定期存盘，解决方案存在问题，强行关闭，会导致redis中的数据存在丢失风险，在这里建议有条件的，配置redis为1主1从，Master不进行任何形式的存盘，而Slave配置RDB和AOF方式的存盘，双保险。应用只连接Master即可。。注意Slave与Master第一次进行同步时会使用全量复制，对资源会有比较大的消耗，尽量选择在业务平峰期进行。<br>引申阅读，Master在这里成为了单点，为了Master的高可用，还有进一步的方案，1个Master下挂2个Slave，其中1个Slave(称为A)负责2种方式的存盘，另一个Slave(称为B)作为Master的热备，在Master故障后，参与到投票，成为新的Master，而B节点切换到A，接受A的增量同步。注意自动failover时，外部需要关闭写入命令。完成failover后，使用ip映射切换，使应用层重新恢复使用，相应的，应用层需要做到一定的容错性。实际生产中，不会要求应用层去做容错性措施，会有各种中间件(twemproxy)自动处理。</p>\n<p>2.以上业务中对<a href=\"https://www.ttlsa.com/redis/redis-database/\">redis的16个数据库</a>没有使用好，可以按业务将数据存储到不同数据库，隔离影响。</p>\n<h3 id=\"常用命令合集\"><a href=\"#常用命令合集\" class=\"headerlink\" title=\"常用命令合集\"></a>常用命令合集</h3><p>调试过程中，由于可视化工具对redis支持的不够好，使用了很多redis的命令行，现在我们总结一下吧！<br>由于docker的风行，好处多多，我们在测试环境、线上环境也使用了docker/docker-compose</p>\n<h4 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose ps          //查看yml文件中所有容器的运行情况</span><br><span class=\"line\">docker-compose up -d xw    //将yml文件中容器名称定义为xw的容器，以后台运行的方式运行起来，如果是tomcat镜像，会调用tomcat的startup.sh.</span><br><span class=\"line\">docker-compose stop xw     //将yml文件中容器名称定义为xw的容器停止，如果是tomcat镜像，会调用tomcat的shutdown.sh</span><br><span class=\"line\">docker-compose stop        //查看yml文件中所有容器进行停止</span><br><span class=\"line\">docker-compose rm xw       //移除xw镜像</span><br><span class=\"line\">docker-compose build xw    //对xw进行镜像构建</span><br></pre></td></tr></table></figure>\n<h4 id=\"redis-cli-sh-info\"><a href=\"#redis-cli-sh-info\" class=\"headerlink\" title=\"./redis-cli.sh/info\"></a>./redis-cli.sh/info</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F:\\Redis&gt; ./redis-cli</span><br><span class=\"line\">127.0.0.1:6379&gt; info</span><br><span class=\"line\"># Server</span><br><span class=\"line\">redis_version:3.0.501</span><br><span class=\"line\">redis_git_sha1:00000000</span><br><span class=\"line\">redis_git_dirty:0</span><br><span class=\"line\">redis_build_id:ba05b51e58eb9205</span><br><span class=\"line\">redis_mode:standalone</span><br><span class=\"line\">os:Windows</span><br><span class=\"line\">arch_bits:64</span><br><span class=\"line\">multiplexing_api:WinSock_IOCP</span><br><span class=\"line\">process_id:1552</span><br><span class=\"line\">run_id:d3f2efa1c6cf26c7cf9246c2fcaca89b8e109439</span><br><span class=\"line\">tcp_port:6379</span><br><span class=\"line\">uptime_in_seconds:462095</span><br><span class=\"line\">uptime_in_days:5</span><br><span class=\"line\">hz:10</span><br><span class=\"line\">lru_clock:16404129</span><br><span class=\"line\">config_file:F:\\Redis\\redis.windows.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Clients</span><br><span class=\"line\">connected_clients:1</span><br><span class=\"line\">client_longest_output_list:0</span><br><span class=\"line\">client_biggest_input_buf:0</span><br><span class=\"line\">blocked_clients:0</span><br><span class=\"line\"></span><br><span class=\"line\"># Memory</span><br><span class=\"line\">used_memory:842704</span><br><span class=\"line\">used_memory_human:822.95K</span><br><span class=\"line\">used_memory_rss:804920</span><br><span class=\"line\">used_memory_peak:374731600</span><br><span class=\"line\">used_memory_peak_human:357.37M</span><br><span class=\"line\">used_memory_lua:36864</span><br><span class=\"line\">mem_fragmentation_ratio:0.96</span><br><span class=\"line\">mem_allocator:jemalloc-3.6.0</span><br><span class=\"line\"></span><br><span class=\"line\"># Persistence</span><br><span class=\"line\">loading:0</span><br><span class=\"line\">rdb_changes_since_last_save:0</span><br><span class=\"line\">rdb_bgsave_in_progress:0</span><br><span class=\"line\">rdb_last_save_time:1459242952</span><br><span class=\"line\">rdb_last_bgsave_status:ok</span><br><span class=\"line\">rdb_last_bgsave_time_sec:1</span><br><span class=\"line\">rdb_current_bgsave_time_sec:-1</span><br><span class=\"line\">aof_enabled:0</span><br><span class=\"line\">aof_rewrite_in_progress:0</span><br><span class=\"line\">aof_rewrite_scheduled:0</span><br><span class=\"line\">aof_last_rewrite_time_sec:-1</span><br><span class=\"line\">aof_current_rewrite_time_sec:-1</span><br><span class=\"line\">aof_last_bgrewrite_status:ok</span><br><span class=\"line\">aof_last_write_status:ok</span><br><span class=\"line\"></span><br><span class=\"line\"># Stats</span><br><span class=\"line\">total_connections_received:1010</span><br><span class=\"line\">total_commands_processed:49859</span><br><span class=\"line\">instantaneous_ops_per_sec:0</span><br><span class=\"line\">total_net_input_bytes:1822381802</span><br><span class=\"line\">total_net_output_bytes:3650427</span><br><span class=\"line\">instantaneous_input_kbps:0.00</span><br><span class=\"line\">instantaneous_output_kbps:0.00</span><br><span class=\"line\">rejected_connections:0</span><br><span class=\"line\">sync_full:0</span><br><span class=\"line\">sync_partial_ok:0</span><br><span class=\"line\">sync_partial_err:0</span><br><span class=\"line\">expired_keys:1073</span><br><span class=\"line\">evicted_keys:0</span><br><span class=\"line\">keyspace_hits:20782</span><br><span class=\"line\">keyspace_misses:738</span><br><span class=\"line\">pubsub_channels:0</span><br><span class=\"line\">pubsub_patterns:0</span><br><span class=\"line\">latest_fork_usec:388023</span><br><span class=\"line\">migrate_cached_sockets:0</span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\">role:master</span><br><span class=\"line\">connected_slaves:0</span><br><span class=\"line\">master_repl_offset:0</span><br><span class=\"line\">repl_backlog_active:0</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:0</span><br><span class=\"line\">repl_backlog_histlen:0</span><br><span class=\"line\"></span><br><span class=\"line\"># CPU</span><br><span class=\"line\">used_cpu_sys:9.45</span><br><span class=\"line\">used_cpu_user:38.25</span><br><span class=\"line\">used_cpu_sys_children:0.00</span><br><span class=\"line\">used_cpu_user_children:0.00</span><br><span class=\"line\"></span><br><span class=\"line\"># Cluster</span><br><span class=\"line\">cluster_enabled:0</span><br><span class=\"line\"></span><br><span class=\"line\"># Keyspace</span><br><span class=\"line\">db0:keys=1,expires=0,avg_ttl=0</span><br></pre></td></tr></table></figure>\n<h4 id=\"set-get\"><a href=\"#set-get\" class=\"headerlink\" title=\"set/get\"></a>set/get</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; set test 123456</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; get test</span><br><span class=\"line\">&quot;123456&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"hset-hmset-hget-hmget\"><a href=\"#hset-hmset-hget-hmget\" class=\"headerlink\" title=\"hset/hmset/hget/hmget\"></a>hset/hmset/hget/hmget</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; hset testHash key1 value11</span><br><span class=\"line\">(integer) 1</span><br><span class=\"line\">127.0.0.1:6379&gt; hget testHash</span><br><span class=\"line\">(error) ERR wrong number of arguments for &apos;hget&apos; command</span><br><span class=\"line\">127.0.0.1:6379&gt; hget testHash key1</span><br><span class=\"line\">&quot;value11&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">127.0.0.1:6379&gt; hset testHash key1 value11 key2 value22</span><br><span class=\"line\">(error) ERR wrong number of arguments for &apos;hset&apos; command</span><br><span class=\"line\">127.0.0.1:6379&gt; hmset testHash key1 value11 key2 value22</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; hmget testHash key1 key2</span><br><span class=\"line\">1) &quot;value11&quot;</span><br><span class=\"line\">2) &quot;value22&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"hlen-keys\"><a href=\"#hlen-keys\" class=\"headerlink\" title=\"hlen/keys\"></a>hlen/keys</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; len test</span><br><span class=\"line\">(error) ERR unknown command &apos;len&apos;</span><br><span class=\"line\">127.0.0.1:6379&gt; hlen testHash</span><br><span class=\"line\">(integer) 2</span><br><span class=\"line\">127.0.0.1:6379&gt; keys test</span><br><span class=\"line\">1) &quot;test&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; keys testHash</span><br><span class=\"line\">1) &quot;testHash&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; keys *</span><br><span class=\"line\">1) &quot;testHash&quot;</span><br><span class=\"line\">2) &quot;test&quot;</span><br><span class=\"line\">3) &quot;message-queue-sms&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"config-set-get\"><a href=\"#config-set-get\" class=\"headerlink\" title=\"config set/get\"></a>config set/get</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; config get *</span><br><span class=\"line\">  1) &quot;dbfilename&quot;</span><br><span class=\"line\">  2) &quot;dump.rdb&quot;</span><br><span class=\"line\">  3) &quot;requirepass&quot;</span><br><span class=\"line\">  4) &quot;&quot;</span><br><span class=\"line\">  5) &quot;masterauth&quot;</span><br><span class=\"line\">  6) &quot;&quot;</span><br><span class=\"line\">  7) &quot;unixsocket&quot;</span><br><span class=\"line\">  8) &quot;&quot;</span><br><span class=\"line\">  9) &quot;logfile&quot;</span><br><span class=\"line\"> 10) &quot;&quot;</span><br><span class=\"line\"> 11) &quot;pidfile&quot;</span><br><span class=\"line\"> 12) &quot;/var/run/redis.pid&quot;</span><br><span class=\"line\"> 13) &quot;maxmemory&quot;</span><br><span class=\"line\"> 14) &quot;512000000&quot;</span><br><span class=\"line\"> 15) &quot;maxmemory-samples&quot;</span><br><span class=\"line\"> 16) &quot;5&quot;</span><br><span class=\"line\"> 17) &quot;timeout&quot;</span><br><span class=\"line\"> 18) &quot;0&quot;</span><br><span class=\"line\"> 19) &quot;tcp-keepalive&quot;</span><br><span class=\"line\"> 20) &quot;0&quot;</span><br><span class=\"line\"> 21) &quot;auto-aof-rewrite-percentage&quot;</span><br><span class=\"line\"> 22) &quot;100&quot;</span><br><span class=\"line\"> 23) &quot;auto-aof-rewrite-min-size&quot;</span><br><span class=\"line\"> 24) &quot;67108864&quot;</span><br><span class=\"line\"> 25) &quot;hash-max-ziplist-entries&quot;</span><br><span class=\"line\"> 26) &quot;512&quot;</span><br><span class=\"line\"> 27) &quot;hash-max-ziplist-value&quot;</span><br><span class=\"line\"> 28) &quot;64&quot;</span><br><span class=\"line\"> 29) &quot;list-max-ziplist-entries&quot;</span><br><span class=\"line\"> 30) &quot;512&quot;</span><br><span class=\"line\"> 31) &quot;list-max-ziplist-value&quot;</span><br><span class=\"line\"> 32) &quot;64&quot;</span><br><span class=\"line\"> 33) &quot;set-max-intset-entries&quot;</span><br><span class=\"line\"> 34) &quot;512&quot;</span><br><span class=\"line\"> 35) &quot;zset-max-ziplist-entries&quot;</span><br><span class=\"line\"> 36) &quot;128&quot;</span><br><span class=\"line\"> 37) &quot;zset-max-ziplist-value&quot;</span><br><span class=\"line\"> 38) &quot;64&quot;</span><br><span class=\"line\"> 39) &quot;hll-sparse-max-bytes&quot;</span><br><span class=\"line\"> 40) &quot;3000&quot;</span><br><span class=\"line\"> 41) &quot;lua-time-limit&quot;</span><br><span class=\"line\"> 42) &quot;5000&quot;</span><br><span class=\"line\"> 43) &quot;slowlog-log-slower-than&quot;</span><br><span class=\"line\"> 44) &quot;10000&quot;</span><br><span class=\"line\"> 45) &quot;latency-monitor-threshold&quot;</span><br><span class=\"line\"> 46) &quot;0&quot;</span><br><span class=\"line\"> 47) &quot;slowlog-max-len&quot;</span><br><span class=\"line\"> 48) &quot;128&quot;</span><br><span class=\"line\"> 49) &quot;port&quot;</span><br><span class=\"line\"> 50) &quot;6379&quot;</span><br><span class=\"line\"> 51) &quot;tcp-backlog&quot;</span><br><span class=\"line\"> 52) &quot;511&quot;</span><br><span class=\"line\"> 53) &quot;databases&quot;</span><br><span class=\"line\"> 54) &quot;16&quot;</span><br><span class=\"line\"> 55) &quot;repl-ping-slave-period&quot;</span><br><span class=\"line\"> 56) &quot;10&quot;</span><br><span class=\"line\"> 57) &quot;repl-timeout&quot;</span><br><span class=\"line\"> 58) &quot;60&quot;</span><br><span class=\"line\"> 59) &quot;repl-backlog-size&quot;</span><br><span class=\"line\"> 60) &quot;1048576&quot;</span><br><span class=\"line\"> 61) &quot;repl-backlog-ttl&quot;</span><br><span class=\"line\"> 62) &quot;3600&quot;</span><br><span class=\"line\"> 63) &quot;maxclients&quot;</span><br><span class=\"line\"> 64) &quot;10000&quot;</span><br><span class=\"line\"> 65) &quot;watchdog-period&quot;</span><br><span class=\"line\"> 66) &quot;0&quot;</span><br><span class=\"line\"> 67) &quot;slave-priority&quot;</span><br><span class=\"line\"> 68) &quot;100&quot;</span><br><span class=\"line\"> 69) &quot;min-slaves-to-write&quot;</span><br><span class=\"line\"> 70) &quot;0&quot;</span><br><span class=\"line\"> 71) &quot;min-slaves-max-lag&quot;</span><br><span class=\"line\"> 72) &quot;10&quot;</span><br><span class=\"line\"> 73) &quot;hz&quot;</span><br><span class=\"line\"> 74) &quot;10&quot;</span><br><span class=\"line\"> 75) &quot;cluster-node-timeout&quot;</span><br><span class=\"line\"> 76) &quot;15000&quot;</span><br><span class=\"line\"> 77) &quot;cluster-migration-barrier&quot;</span><br><span class=\"line\"> 78) &quot;1&quot;</span><br><span class=\"line\"> 79) &quot;cluster-slave-validity-factor&quot;</span><br><span class=\"line\"> 80) &quot;10&quot;</span><br><span class=\"line\"> 81) &quot;repl-diskless-sync-delay&quot;</span><br><span class=\"line\"> 82) &quot;5&quot;</span><br><span class=\"line\"> 83) &quot;cluster-require-full-coverage&quot;</span><br><span class=\"line\"> 84) &quot;yes&quot;</span><br><span class=\"line\"> 85) &quot;no-appendfsync-on-rewrite&quot;</span><br><span class=\"line\"> 86) &quot;no&quot;</span><br><span class=\"line\"> 87) &quot;slave-serve-stale-data&quot;</span><br><span class=\"line\"> 88) &quot;yes&quot;</span><br><span class=\"line\"> 89) &quot;slave-read-only&quot;</span><br><span class=\"line\"> 90) &quot;yes&quot;</span><br><span class=\"line\"> 91) &quot;stop-writes-on-bgsave-error&quot;</span><br><span class=\"line\"> 92) &quot;yes&quot;</span><br><span class=\"line\"> 93) &quot;daemonize&quot;</span><br><span class=\"line\"> 94) &quot;no&quot;</span><br><span class=\"line\"> 95) &quot;rdbcompression&quot;</span><br><span class=\"line\"> 96) &quot;yes&quot;</span><br><span class=\"line\"> 97) &quot;rdbchecksum&quot;</span><br><span class=\"line\"> 98) &quot;yes&quot;</span><br><span class=\"line\"> 99) &quot;activerehashing&quot;</span><br><span class=\"line\">100) &quot;yes&quot;</span><br><span class=\"line\">101) &quot;repl-disable-tcp-nodelay&quot;</span><br><span class=\"line\">102) &quot;no&quot;</span><br><span class=\"line\">103) &quot;repl-diskless-sync&quot;</span><br><span class=\"line\">104) &quot;no&quot;</span><br><span class=\"line\">105) &quot;aof-rewrite-incremental-fsync&quot;</span><br><span class=\"line\">106) &quot;yes&quot;</span><br><span class=\"line\">107) &quot;aof-load-truncated&quot;</span><br><span class=\"line\">108) &quot;yes&quot;</span><br><span class=\"line\">109) &quot;appendonly&quot;</span><br><span class=\"line\">110) &quot;no&quot;</span><br><span class=\"line\">111) &quot;dir&quot;</span><br><span class=\"line\">112) &quot;F:\\\\Redis&quot;</span><br><span class=\"line\">113) &quot;maxmemory-policy&quot;</span><br><span class=\"line\">114) &quot;noeviction&quot;</span><br><span class=\"line\">115) &quot;appendfsync&quot;</span><br><span class=\"line\">116) &quot;everysec&quot;</span><br><span class=\"line\">117) &quot;save&quot;</span><br><span class=\"line\">118) &quot;jd 900 jd 300 jd 60&quot;</span><br><span class=\"line\">119) &quot;loglevel&quot;</span><br><span class=\"line\">120) &quot;verbose&quot;</span><br><span class=\"line\">121) &quot;client-output-buffer-limit&quot;</span><br><span class=\"line\">122) &quot;normal 0 0 0 slave 268435456 67108864 60 pubsub 33554432 8388608 60&quot;</span><br><span class=\"line\">123) &quot;unixsocketperm&quot;</span><br><span class=\"line\">124) &quot;0&quot;</span><br><span class=\"line\">125) &quot;slaveof&quot;</span><br><span class=\"line\">126) &quot;&quot;</span><br><span class=\"line\">127) &quot;notify-keyspace-events&quot;</span><br><span class=\"line\">128) &quot;&quot;</span><br><span class=\"line\">129) &quot;bind&quot;</span><br><span class=\"line\">130) &quot;&quot;</span><br><span class=\"line\">127.0.0.1:6379&gt; config set save &quot;&quot;</span><br><span class=\"line\">OK</span><br></pre></td></tr></table></figure>\n<h4 id=\"flushdb-flushall\"><a href=\"#flushdb-flushall\" class=\"headerlink\" title=\"flushdb/flushall\"></a>flushdb/flushall</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; flushdb</span><br><span class=\"line\">OK</span><br><span class=\"line\">127.0.0.1:6379&gt; flushall</span><br><span class=\"line\">OK</span><br></pre></td></tr></table></figure>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li>redis删除有序集合部分过期元素：<a href=\"http://caozm.blog.51cto.com/1118764/1389168\">http://caozm.blog.51cto.com/1118764/1389168</a></li>\n<li>节约内存：Instagram的Redis实践：<a href=\"http://blog.nosqlfan.com/html/3379.html\">http://blog.nosqlfan.com/html/3379.html</a></li>\n<li>redis持久化机制：<a href=\"http://shanks.leanote.com/post/Untitled-55ca439338f41148cd000759-22\">http://shanks.leanote.com/post/Untitled-55ca439338f41148cd000759-22</a></li>\n<li>Redis事务的分析及改进：<a href=\"https://segmentfault.com/a/1190000002594059\">https://segmentfault.com/a/1190000002594059</a></li>\n<li>redis 多数据库：<a href=\"https://www.ttlsa.com/redis/redis-database/\">https://www.ttlsa.com/redis/redis-database/</a></li>\n<li>利用Sorted Set数据结构，为元素设置有效期：<a href=\"http://stackoverflow.com/questions/7577923/redis-possible-to-expire-an-element-in-an-array-or-sorted-set\">http://stackoverflow.com/questions/7577923/redis-possible-to-expire-an-element-in-an-array-or-sorted-set</a></li>\n<li>redis的Slave选举与优先级：<a href=\"https://segmentfault.com/a/1190000002685515\">https://segmentfault.com/a/1190000002685515</a></li>\n<li>利用代理中间件实现大规模Redis集群：<a href=\"http://www.imooc.com/article/4343\">http://www.imooc.com/article/4343</a></li>\n</ul>","msg":"Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html","time":"2016-06-02T03:13:22.352Z","v":0}
{"name":"hexo","hostname":"PC-201402281156","pid":16912,"level":20,"msg":"Database saved","time":"2016-06-02T03:13:22.406Z","v":0}
